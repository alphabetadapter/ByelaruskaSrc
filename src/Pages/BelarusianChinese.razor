@page "/belarusian-to-chinese"

<PageTitle>Belarusian -> Chinese</PageTitle>

<textarea 
    onkeydown="textControl(this,event)"
    class="form-control" 
    id="textarea1" 
    value="@BelarusianTxt" 
    maxlength="4000" 
    @oninput="@((ChangeEventArgs e) => ChineseTxt = GetValue(e?.Value?.ToString() ?? string.Empty))" />

<textarea 
    onkeydown="textControl(this,event)"
    class="form-control" 
    id="textarea2" 
    maxlength="4000" >@ChineseTxt</textarea>

@code {

    private string? ChineseTxt { get; set; }
    private string? BelarusianTxt { get; set; }

    private string GetValue(string BelarusianValue)
    {
        var tmpString = BelarusianValue ?? string.Empty;
        var correction = CorrectLetterCombinations();
        var letterCombinations = GetLetterCombinations();
        var singleLetters = GetSingleLetters();
        foreach (var c in correction)
        {
            tmpString = tmpString.Replace(c.Key, c.Value);
        }
        foreach (var lc in letterCombinations)
        {
            tmpString = tmpString.Replace(lc.Key, lc.Value);
        }
        foreach (var sl in singleLetters)
        {
            tmpString = tmpString.Replace(sl.Key, sl.Value);
        }
        return tmpString;
    }

    private IDictionary<string, string> CorrectLetterCombinations()
    {
        var dict = new Dictionary<string, string>();
        // Belarusian (BGN PCGN 1979) Latin
        dict.Add("[К|с]", "多以");    // qq c
        dict.Add("[к|С]", "多以");    // qq c
        return dict;
    }

    private IDictionary<string, string> GetLetterCombinations()
    {
        var dict = new Dictionary<string, string>();

        // Belarusian (BGN PCGN 1979) Latin
        // Chinese (Simplified, China, 五, 五笔)
        // Google Input Tools
        // [к|с] = c
        // [х] = h
        // https://www.google.com/inputtools/chrome/		
        //                        // keyboard:
        dict.Add("[К|С]", "多以");    // qq c
        dict.Add("[Х]", "多上");   // qq h
        dict.Add("[к|с]", "以");     // c
        dict.Add("[х]", "上");    // h
        return dict;
    }
    private IDictionary<string, string> GetSingleLetters()
    {
        var dict = new Dictionary<string, string>();

        // Belarusian (BGN PCGN 1979) Latin
        // г = g
        // й = j
        // ь = x
        // ’ = q
        // Chinese (Simplified, China, 五, 五笔)
        // Google Input Tools
        // https://www.google.com/inputtools/chrome/		
        //                       // keyboard:
        dict.Add("Е", "多主有");    // qq y e
        dict.Add("Ё", "多主为");    // qq y o
        dict.Add("Ж", "多你上");    // qq zz h
        dict.Add("Х", "多中上");    // qq k h
        dict.Add("Ц", "多和要");    // qq t s
        dict.Add("Ч", "多以上");    // qq c h
        dict.Add("Ш", "多要上");    // qq s h
        dict.Add("Щ", "多要上以上"); // qq s h ch
        dict.Add("Ю", "多主产");    // qq y u
        dict.Add("Я", "多主工");    // qq y a

        dict.Add("А", "多工");     // qq a
        dict.Add("Б", "多了");     // qq b
        dict.Add("В", "多发");     // qq v
        dict.Add("Г", "多一");     // qq g
        dict.Add("Д", "多在");     // qq d
        dict.Add("З", "多你");     // qq zz
        dict.Add("I", "多不");     // qq i
        dict.Add("И", "多不");     // qq i
        dict.Add("Й", "多是");     // qq j
        dict.Add("К", "多中");     // qq k
        dict.Add("Л", "多国");     // qq l
        dict.Add("М", "多同");     // qq m
        dict.Add("Н", "多民");     // qq n
        dict.Add("О", "多为");     // qq o
        dict.Add("П", "多这");     // qq p
        dict.Add("Р", "多的");     // qq r
        dict.Add("С", "多要");     // qq s
        dict.Add("Т", "多和");     // qq t
        dict.Add("У", "多产");     // qq u
        dict.Add("Ў", "多人");     // qq w
        dict.Add("Ф", "多地");     // qq f
        dict.Add("Ы", "多主");     // qq y
        dict.Add("Ь", "多经");     // qq x
        dict.Add("Ъ", "我");       // q
        dict.Add("Э", "多有");     // qq e

        dict.Add("е", "主有");    // y e
        dict.Add("ё", "主为");    // y o
        dict.Add("ж", "你上");    // zz h
        dict.Add("ц", "和要");    // t s
        dict.Add("ч", "以上");    // c h
        dict.Add("ш", "要上");    // s h
        dict.Add("щ", "要上以上");// s h ch
        dict.Add("ю", "主产");    // y u
        dict.Add("я", "主工");    // y a
        dict.Add("х", "中上");    // k h

        dict.Add("а", "工");     // a
        dict.Add("б", "了");     // b
        dict.Add("в", "发");     // v
        dict.Add("г", "一");     // g
        dict.Add("д", "在");     // d
        dict.Add("з", "你");     // zz
        dict.Add("і", "不");     // i
        dict.Add("и", "不");     // i
        dict.Add("й", "是");     // j
        dict.Add("к", "中");     // k
        dict.Add("л", "国");     // l
        dict.Add("м", "同");     // m
        dict.Add("н", "民");     // n
        dict.Add("о", "为");     // o
        dict.Add("п", "这");     // p
        dict.Add("р", "的");     // r
        dict.Add("с", "要");     // s
        dict.Add("т", "和");     // t
        dict.Add("у", "产");     // u
        dict.Add("ў", "人");     // w
        dict.Add("ф", "地");     // f
        dict.Add("ы", "主");     // y
        dict.Add("ь", "经");     // x   
        dict.Add("'", "我");     // q
        dict.Add("’", "我");     // q        
        dict.Add("ъ", "我");     // q
        dict.Add("э", "有");     // e
        dict.Add(",", "，");
        dict.Add(".", "。");
        dict.Add("(", "（");
        dict.Add(")", "）");
        dict.Add(";", "；");
        dict.Add("[", "【");
        dict.Add("]", "】");
        dict.Add(":", "：");
        dict.Add("!", "！");
        dict.Add("?", "？");
        dict.Add(">", "》");
        dict.Add("<", "《");
        return dict;
    }
}